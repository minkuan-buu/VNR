"use client";
import { MdSmartToy } from "react-icons/md";
import { Button } from "@heroui/button";
import {
    Modal,
    ModalContent,
    ModalHeader,
    ModalBody,
    ModalFooter,
    useDisclosure
} from "@heroui/modal";
import { Input } from "@heroui/input";
import { useState } from "react";
import ReactMarkdown from "react-markdown";

export interface ChatModel {
    author: string;
    message: string;
}

export default function AIButton() {
    const { isOpen, onOpen, onOpenChange } = useDisclosure();
    const [response, setResponse] = useState<ChatModel[]>([]);
    const [isLoading, setIsLoading] = useState(false);
    const [message, setMessage] = useState("");

    const handleChat = async (message: string) => {
        if (!message) return;
        setIsLoading(true);
        setMessage("");

        // L∆∞u tin nh·∫Øn user
        setResponse((prev) => [...prev, { author: "user", message }]);

        // Hi·ªÉn th·ªã hi·ªáu ·ª©ng AI ƒëang suy nghƒ©
        setResponse((prev) => [...prev, { author: "ai", message: "..." }]);

        var prompt = `H√£y tr·∫£ l·ªùi c√¢u h·ªèi li√™n quan ƒë·∫øn ƒê·∫£ng l√£nh ƒë·∫°o c·∫£ n∆∞·ªõc qu√° ƒë·ªô l√™n ch·ªß nghƒ©a x√£ h·ªôi v√† ti·∫øn h√†nh c√¥ng cu·ªôc ƒë·ªïi m·ªõi ho·∫∑c nh·ªØng c√¢u h·ªèi li√™n quan trong m√¥n h·ªçc l·ªãch s·ª≠ ƒê·∫£ng. N·∫øu kh√¥ng li√™n quan, tr·∫£ l·ªùi 'Xin l·ªói, t√¥i kh√¥ng th·ªÉ tr·∫£ l·ªùi c√¢u h·ªèi kh√¥ng li√™n quan'. C√¢u h·ªèi: ${message}`;

        try {
            const res = await fetch("https://vnr.buubuu.id.vn/api/chat", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ message: prompt }),
            });

            const data = await res.json();

            // C·∫≠p nh·∫≠t tin nh·∫Øn AI (x√≥a "..." v√† thay b·∫±ng n·ªôi dung th·ª±c)
            setResponse((prev) => [
                ...prev.slice(0, -1), // X√≥a ph·∫ßn "..."
                { author: "ai", message: data.message }
            ]);
        } catch (error) {
            console.error("L·ªói khi g·ªçi API:", error);
        }

        setIsLoading(false);
        setMessage(""); // X√≥a input sau khi g·ª≠i
    };

    return (
        <div className="fixed bottom-5 right-5">
            <Modal isOpen={isOpen} placement="bottom" onOpenChange={onOpenChange}>
                <ModalContent className="fixed bottom-5 right-5 w-[450px] h-[600px] shadow-lg border rounded-lg flex flex-col">
                    {(onClose) => (
                        <>
                            <ModalHeader className="flex flex-col gap-1">AI Chat</ModalHeader>
                            <ModalBody className="flex flex-col gap-2 items-start overflow-y-auto">
                                <p>Ch√†o b·∫°n! T√¥i l√† AI Chatbot. B·∫°n c·∫ßn gi√∫p g√¨?</p>
                                {response.map((item, index) => (
                                    <div
                                        key={index}
                                        className={`max-w-[80%] p-2 rounded-lg 
                                            ${item.author === "user"
                                                ? "bg-blue-500 text-white self-end"
                                                : "bg-gray-200 text-black self-start"
                                            }`}
                                    >
                                        {item.message === "..." && item.author != "user" ? (
                                            <span className="animate-pulse">ü§ñ ƒêang suy nghƒ©...</span>
                                        ) : (
                                            <ReactMarkdown>
                                                {item.message}
                                            </ReactMarkdown>
                                        )}
                                    </div>
                                ))}
                            </ModalBody>
                            <ModalFooter className="flex gap-2 items-center justify-between">
                                <Input
                                    disabled={isLoading}
                                    value={message}
                                    onChange={(e) => setMessage(e.target.value)}
                                    className="w-full"
                                    placeholder="Nh·∫≠p c√¢u h·ªèi..."
                                />
                                <Button
                                    className="mt-2"
                                    disabled={isLoading}
                                    onPress={() => handleChat(message)}
                                >
                                    G·ª≠i
                                </Button>
                            </ModalFooter>
                        </>
                    )}
                </ModalContent>
            </Modal>

            <Button
                className="bg-blue-500 text-white w-20 h-20 text-sm rounded-full shadow-lg flex items-center justify-center hover:bg-blue-600 transition-all duration-300"
                onPress={onOpen}
            >
                <MdSmartToy size={28} />
            </Button>
        </div>
    );
}
